// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Blockchain should accept custom logger 1`] = `
Array [
  Array [
    Object {
      "parameters": Object {
        "callback": "https://example.com?signature=4b506b7c3a37df75af9ac0a54e810ce3397fbe2255d9d820c041f9bec3a3516cfc39bce02570dfed230d81f5f37f0ba5bf886275c69d1e8b31399df45a250dd2",
        "key": "xxx",
        "xpub": "yyy",
      },
      "url": "https://api.blockchain.info/v2/receive?xpub=yyy&callback=https%3A%2F%2Fexample.com%3Fsignature%3D4b506b7c3a37df75af9ac0a54e810ce3397fbe2255d9d820c041f9bec3a3516cfc39bce02570dfed230d81f5f37f0ba5bf886275c69d1e8b31399df45a250dd2&key=xxx",
    },
    "generating receiving address",
  ],
]
`;

exports[`Blockchain should create a new invoice with receiving address 1`] = `
Object {
  "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
  "createdDate": 2018-04-19T13:48:05.316Z,
  "dueAmount": 1,
  "message": "Test invoice",
  "paymentState": "PENDING",
  "stateTransitions": Array [],
  "transactions": Array [],
  "updatedDate": 2018-04-20T13:48:05.316Z,
}
`;

exports[`Blockchain should generate a new receiving address 1`] = `
Object {
  "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
  "callback": "https://example.com",
  "index": 0,
}
`;

exports[`Blockchain should throw error when generating receving address and getting a non 2xx response 1`] = `[Error: Request failed with status code 400]`;

exports[`middleware should fail if update tries to change amount 1`] = `"pending"`;

exports[`middleware should fail if update tries to change amount 2`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "WAITING_FOR_CONFIRMATION",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "WAITING_FOR_CONFIRMATION",
        "previousState": "PENDING",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 0,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should fail if update tries to change amount 3`] = `"got bad transaction"`;

exports[`middleware should fail if update tries to change amount 4`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "WAITING_FOR_CONFIRMATION",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "WAITING_FOR_CONFIRMATION",
        "previousState": "PENDING",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 0,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should handle invalid invoice address 1`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "PENDING",
    "stateTransitions": Array [],
    "transactions": Array [],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should handle valid payment updates 1`] = `"pending"`;

exports[`middleware should handle valid payment updates 2`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "WAITING_FOR_CONFIRMATION",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "WAITING_FOR_CONFIRMATION",
        "previousState": "PENDING",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 0,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should handle valid payment updates 3`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "CONFIRMED",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "WAITING_FOR_CONFIRMATION",
        "previousState": "PENDING",
      },
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "CONFIRMED",
        "previousState": "WAITING_FOR_CONFIRMATION",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 5,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should ignore invalid update 1`] = `"got invalid payment status update"`;

exports[`middleware should ignore invalid update 2`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "PENDING",
    "stateTransitions": Array [],
    "transactions": Array [],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should ignore updates once already complete 1`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "CONFIRMED",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "CONFIRMED",
        "previousState": "PENDING",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 5,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should ignore updates once already complete 2`] = `
Array [
  Object {
    "address": "2FupTEd3PDF7HVxNrzNqQGGoWZA4rqiphq",
    "createdDate": 2018-04-19T13:48:05.316Z,
    "dueAmount": 10,
    "message": "Test",
    "paymentState": "CONFIRMED",
    "stateTransitions": Array [
      Object {
        "date": 2018-04-21T13:48:05.316Z,
        "newState": "CONFIRMED",
        "previousState": "PENDING",
      },
    ],
    "transactions": Array [
      Object {
        "amount": 10,
        "confirmations": 5,
        "createdDate": 2018-04-19T13:48:05.316Z,
        "hash": "xxx",
        "updatedDate": 2018-04-20T13:48:05.316Z,
      },
    ],
    "updatedDate": 2018-04-20T13:48:05.316Z,
  },
]
`;

exports[`middleware should provide qr code rendering 1`] = `
Object {
  "data": Array [
    137,
    80,
    78,
    71,
    13,
    10,
    26,
    10,
    0,
    0,
    0,
    13,
    73,
    72,
    68,
    82,
    0,
    0,
    0,
    180,
    0,
    0,
    0,
    180,
    8,
    0,
    0,
    0,
    0,
    24,
    166,
    89,
    238,
    0,
    0,
    2,
    94,
    73,
    68,
    65,
    84,
    120,
    218,
    237,
    220,
    193,
    110,
    2,
    49,
    12,
    69,
    209,
    249,
    255,
    159,
    110,
    87,
    149,
    80,
    133,
    243,
    174,
    157,
    12,
    2,
    113,
    103,
    67,
    53,
    20,
    114,
    82,
    53,
    181,
    99,
    135,
    94,
    63,
    31,
    120,
    93,
    162,
    69,
    139,
    22,
    45,
    90,
    180,
    104,
    209,
    162,
    69,
    191,
    41,
    250,
    90,
    92,
    127,
    207,
    63,
    126,
    239,
    227,
    107,
    210,
    253,
    106,
    12,
    50,
    174,
    104,
    209,
    59,
    232,
    167,
    191,
    252,
    112,
    240,
    255,
    247,
    171,
    73,
    84,
    143,
    104,
    92,
    209,
    162,
    7,
    232,
    213,
    2,
    172,
    22,
    95,
    181,
    120,
    86,
    216,
    238,
    184,
    162,
    69,
    159,
    70,
    147,
    192,
    147,
    38,
    75,
    2,
    146,
    104,
    209,
    175,
    68,
    87,
    127,
    248,
    171,
    215,
    146,
    197,
    40,
    90,
    244,
    221,
    232,
    213,
    100,
    158,
    13,
    152,
    54,
    12,
    85,
    80,
    26,
    37,
    106,
    162,
    69,
    55,
    209,
    52,
    128,
    156,
    126,
    188,
    125,
    55,
    46,
    250,
    43,
    209,
    177,
    248,
    7,
    18,
    161,
    106,
    131,
    75,
    10,
    57,
    183,
    84,
    77,
    69,
    127,
    53,
    154,
    36,
    65,
    85,
    225,
    176,
    66,
    63,
    123,
    111,
    18,
    156,
    198,
    17,
    81,
    180,
    104,
    176,
    208,
    82,
    82,
    147,
    10,
    52,
    233,
    235,
    132,
    23,
    45,
    122,
    138,
    78,
    137,
    83,
    90,
    68,
    211,
    64,
    147,
    54,
    205,
    162,
    69,
    79,
    209,
    49,
    1,
    135,
    27,
    91,
    146,
    208,
    167,
    231,
    68,
    139,
    62,
    129,
    238,
    32,
    82,
    128,
    32,
    197,
    244,
    213,
    61,
    209,
    162,
    79,
    160,
    19,
    106,
    133,
    72,
    193,
    131,
    140,
    67,
    54,
    188,
    162,
    69,
    79,
    209,
    169,
    41,
    68,
    130,
    72,
    218,
    204,
    166,
    201,
    136,
    22,
    189,
    139,
    238,
    4,
    137,
    78,
    81,
    60,
    53,
    67,
    233,
    65,
    44,
    209,
    162,
    167,
    185,
    199,
    42,
    8,
    84,
    131,
    118,
    22,
    46,
    77,
    152,
    90,
    221,
    45,
    209,
    162,
    67,
    163,
    40,
    5,
    128,
    78,
    163,
    159,
    108,
    8,
    104,
    210,
    36,
    90,
    244,
    78,
    194,
    68,
    27,
    64,
    157,
    131,
    83,
    147,
    205,
    172,
    104,
    209,
    39,
    208,
    171,
    70,
    17,
    109,
    114,
    86,
    11,
    151,
    252,
    144,
    70,
    39,
    107,
    68,
    139,
    222,
    40,
    162,
    76,
    14,
    136,
    167,
    73,
    165,
    73,
    138,
    22,
    189,
    115,
    232,
    123,
    149,
    72,
    165,
    69,
    149,
    146,
    44,
    82,
    192,
    108,
    5,
    23,
    209,
    162,
    33,
    154,
    22,
    96,
    232,
    98,
    36,
    27,
    102,
    209,
    162,
    79,
    163,
    83,
    242,
    211,
    105,
    20,
    209,
    34,
    123,
    167,
    16,
    41,
    90,
    116,
    183,
    150,
    215,
    109,
    200,
    167,
    98,
    205,
    106,
    243,
    218,
    41,
    74,
    138,
    22,
    61,
    65,
    119,
    19,
    118,
    90,
    188,
    76,
    27,
    3,
    218,
    248,
    20,
    45,
    186,
    139,
    38,
    13,
    126,
    90,
    8,
    95,
    37,
    83,
    177,
    112,
    62,
    237,
    4,
    136,
    22,
    29,
    192,
    116,
    99,
    64,
    112,
    41,
    216,
    144,
    67,
    44,
    162,
    69,
    159,
    200,
    61,
    232,
    6,
    54,
    5,
    149,
    180,
    72,
    183,
    119,
    46,
    162,
    69,
    15,
    63,
    24,
    76,
    27,
    59,
    100,
    34,
    157,
    195,
    44,
    162,
    69,
    79,
    208,
    244,
    80,
    96,
    42,
    70,
    210,
    224,
    145,
    14,
    185,
    136,
    22,
    125,
    2,
    157,
    146,
    242,
    171,
    121,
    77,
    131,
    78,
    187,
    19,
    32,
    90,
    244,
    193,
    127,
    242,
    183,
    106,
    202,
    167,
    194,
    229,
    145,
    44,
    79,
    180,
    232,
    33,
    58,
    190,
    33,
    56,
    144,
    149,
    10,
    235,
    91,
    135,
    84,
    68,
    139,
    30,
    162,
    201,
    7,
    28,
    104,
    32,
    34,
    80,
    209,
    162,
    119,
    209,
    221,
    5,
    214,
    57,
    48,
    59,
    89,
    196,
    162,
    69,
    159,
    168,
    79,
    211,
    195,
    86,
    171,
    3,
    38,
    157,
    123,
    228,
    80,
    174,
    104,
    209,
    93,
    244,
    39,
    92,
    162,
    69,
    139,
    22,
    45,
    90,
    180,
    104,
    209,
    162,
    69,
    191,
    201,
    245,
    11,
    5,
    115,
    227,
    129,
    113,
    208,
    243,
    118,
    0,
    0,
    0,
    0,
    73,
    69,
    78,
    68,
    174,
    66,
    96,
    130,
  ],
  "type": "Buffer",
}
`;
